import axios from "axios";
import { GetServerSideProps } from "next";
import { AppContext } from "next/app";
import Head from "next/head";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import { Post } from "../types/postTypes";
import ThumbUpAltIcon from "@material-ui/icons/ThumbUpAlt";
import { Button, IconButton } from "@material-ui/core";
import CommentIcon from "@material-ui/icons/Comment";
import { SubmitHandler, useForm } from "react-hook-form";
import { Comment } from "../types/comments";

interface HomeProps {
  postsData: Post[];
}
interface CommentFormInputs {
  comment: string;
  post_id: string;
}
export default function Home({ postsData }: HomeProps) {
  const [liked, setLiked] = useState(false);
  const [posts, setPosts] = useState([]);
  const [comments, setComments] = useState([]);
  const [hide, setHide] = useState(true);
  useEffect(() => {
    setPosts(postsData);
  }, []);
  //like post
  const likePost = async (postId: string) => {
    try {
      const { data } = await axios.put(
        "http://localhost:5000/api/posts/like",
        {
          post_id: postId,
        },
        { withCredentials: true }
      );
      const res = await axios.get<Post[]>("http://localhost:5000/api/posts");
      setPosts(res.data);
      if (data.msg == "liked") {
        setLiked(true);
      } else {
        setLiked(false);
      }
    } catch (error) {
      console.log(error);
    }
  };
  //create comment
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const createPostComment: SubmitHandler<CommentFormInputs> = async (
    commentData
  ) => {
    console.log(commentData);
    try {
      const { data } = await axios.post(
        "http://localhost:5000/api/posts/comment",
        {
          post_id: commentData.post_id,
          description: commentData.comment,
        },
        { withCredentials: true }
      );
      console.log(data);
      fetchComments(commentData.post_id);
    } catch (error) {
      console.log(error);
    }
  };
  //fetch comments
  const fetchComments = async (postId: string) => {
    setHide(!hide);
    try {
      const { data } = await axios.post(
        "http://localhost:5000/api/posts/comment/all",
        {
          post_id: postId,
        },
        { withCredentials: true }
      );

      setComments(data);
    } catch (error) {
      console.log(error);
    }
  };
  // const unLikePost = async (postId: string) => {
  //   const { data } = await axios.put(
  //     "http://localhost:5000/api/posts/like",
  //     {
  //       post_id: postId,
  //     },
  //     { withCredentials: true }
  //   );
  //   const res = await axios.get<Post[]>("http://localhost:5000/api/posts");
  //   setData(res.data);
  //   setLiked(false);
  // };
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {posts.map((item) => {
        return (
          <div className="card mt-3" style={{ width: "550px" }} key={item.id}>
            <img
              className="card-img-top"
              src={`http://localhost:5000/${item.image}`}
              alt={item.title}
            />
            <div className="card-body">
              <h5 className="card-title">{item.title}</h5>
              <p className="card-text">{item.description}</p>
            </div>
            <ul className="list-group list-group-flush">
              <li className="list-group-item">{item.name}</li>
              <li className="list-group-item">{item.created_at}</li>
              <li className="list-group-item">
                <strong>Likes: </strong>
                {item.likes?.length}
              </li>
              <li className="list-group-item">
                <IconButton
                  onClick={(
                    event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                  ) => likePost(item.id)}
                >
                  <ThumbUpAltIcon htmlColor={liked ? "primary" : ""} />
                </IconButton>
                <IconButton
                  onClick={(
                    event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                  ) => fetchComments(item.id)}
                >
                  <CommentIcon />
                </IconButton>
              </li>
              <li className="list-group-item">
                <h3>Comments</h3>
                <form onSubmit={handleSubmit(createPostComment)}>
                  <input
                    type="text"
                    {...register("comment", { required: true })}
                    className="form-control"
                    placeholder="Write a comment..."
                  />
                  <input
                    type="text"
                    {...register("post_id", { required: true })}
                    value={item.id}
                    hidden
                  />
                  <button className="btn btn-primary btn-sm">Comment</button>
                </form>
                {hide ? (
                  <div></div>
                ) : (
                  comments.map((comment) => (
                    <div className="comment" key={comment.id}>
                      <h6>{comment.name}</h6>
                      <p>{comment.description}</p>
                      <p>{comment.created_at}</p>
                    </div>
                  ))
                )}
              </li>
            </ul>
          </div>
        );
      })}
    </div>
  );
}
export const getServerSideProps: GetServerSideProps = async (context) => {
  const { data } = await axios.get<Post[]>("http://localhost:5000/api/posts");

  return {
    props: {
      postsData: data,
    },
  };
};
